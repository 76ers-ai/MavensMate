<apex:page showHeader="true" sidebar="true" controller="LeadDistributor_Configuration_Controller" tabstyle="LeadDistributionSystem__c" >
	<head>
	<style>	
		#loading-mask {
		  position: absolute;
		  left:     0;
		  top:      0;
		  width:    100%;
		  height:   100%;
		  z-index:  20000;
		  background-color: white;
		}
		

		#loading {
		  position: absolute;
		  left:     50%;
		  top:      50%;
		  padding:  2px;
		  z-index:  20001;
		  height:   auto;
		  margin:   -35px 0 0 -30px;
		}
		
		#loading .loading-indicator {
		  background: url({!$Resource.loading_indicator}) no-repeat;
		  color:      #555;
		  font:       bold 13px tahoma,arial,helvetica;
		  padding:    8px 42px;
		  margin:     0;
		  text-align: center;
		  height:     auto;
		}
	
		/*.activeTab {background-color: #E39321; color:white; background-image:none} ORANGE */
		.activeTab {background-color: #3044B5; color:white; background-image:none} /*BLUE*/
		.inactiveTab { background-color: lightgrey; color:black; background-image:none}
		.testHeader { 
			background:#F9F9F9 url(/img/colHeader_bg.gif) repeat-x scroll 0 0;
			height:25px;
			color:#333333;
		}
		.topNav primaryPalette { background-color:#BA3B3B; border-color:#BA3B3B; }
		#j_id0:Review_Room_Leads_topNav { background-color:#BA3B3B; border-color:#BA3B3B; }
		.tablerows { 
			height:25px;
			vertical-align:middle;
		}
		
		.tablerows:hover{ background-color:#FBFBEE; }
		
		.tablerows tr:hover{ background-color:#FBFBEE; }
		
		.tablerows td {
			border-bottom-style: solid;
			border-bottom-color:#ccc;
			border-bottom-width:1px;
			vertical-align:middle;
			/*horizontal-align:center;
			text-align:middle;
			text-align:center;*/
		}
		
		.x-grid3-row td, .x-grid3-summary-row td {
			font-size:14px;
		}
		
	</style>
	<link rel="Stylesheet" type="text/css" href="{!$Resource.extjs}/ext-2.2.1/resources/css/ext-all.css" />
	<link rel="Stylesheet" type="text/css" href="{!$Resource.extjs}/ext-2.2.1/resources/css/xtheme-gray.css" />	
	<script type="text/javascript" src="{!$Resource.extjs}/ext-2.2.1/adapter/ext/ext-base.js"></script>
	<script type="text/javascript" src="{!$Resource.extjs}/ext-2.2.1/ext-all.js"></script>
	<script type="text/javascript" src="{!$Resource.rowexpander}"></script>
	<script type="text/javascript" src="{!$Resource.elements_by_class_name}"></script>	
	<script type="text/javascript">
		if(typeof(window.external) != 'undefined'){
			//yes, this is evil browser sniffing, but only IE has this bug		
			document.getElementsByName = function(name, tag){
			    if(!tag){
			        tag = '*';
			    }
			    var elems = document.getElementsByTagName(tag);
			    var res = []
			    for(var i=0;i<elems.length;i++){
			        att = elems[i].getAttribute('name');
			        if(att == name) {
			            res.push(elems[i]);
			        }
			    }
			    return res;
			}		
		}
	</script>
	<script type="text/javascript">	
		var grid;
		var recent_distro_grid;
		var conflictGrid;
		var queueMemberGrid;
		var tabs;
		var confirm_distribute_message;
		var confirm_conflict_assign_message;
		var confirm_disqualify_message;
		var tabsWidth;
		var xg;
		var progress_message;			    
		
		function distribute_conflict_leads(btn) {
			if (btn == 'yes' || btn == 'Yes') {
				confirm_conflict_assign_message.hide();
				var progress_message = Ext.MessageBox;
				progress_message.show({
		           msg: 'Distributing leads, please wait...',
		           progressText: 'distributing...',
		           width:300,
		           wait:true,
		           waitConfig: {interval:200},
		           animEl: 'mb7'
		       });
				
				var conflict_owner_string = '';
				var selects = document.getElementsByName("select_conflict");
				for (var i = 0; i < selects.length; i++) {
					var the_lead_id = selects[i].id; //the lead id to assign the owner of
					var the_lead_ownerid = selects[i].options[selects[i].selectedIndex].value; //
					if (the_lead_ownerid.indexOf('#') == -1) {
						the_lead_ownerid = the_lead_ownerid.substring(the_lead_ownerid.indexOf('/'), the_lead_ownerid.indexOf(';'));
						conflict_owner_string += the_lead_id + '/' + the_lead_ownerid + ';';
					}
				}
	
				document.getElementById("{!$Component.master_form.hidden_conflict_owner_array}").value = conflict_owner_string;	
				var myButton = document.getElementById("{!$Component.master_form.btnAssignConflictOwners}");
				if (conflict_owner_string.length > 0)
					myButton.click();
				else {
					progress_message.hide();
		        	var messageBox = Ext.MessageBox;
		        	messageBox.minWidth = 400;
		        	messageBox.alert('Error', 'Please select an owner for each lead you want to distribute');
				}
				//Ext.MessageBox.hide();
				//Ext.MessageBox.alert('Status', 'Leads were distributed successfully');
			}
		}
				
		function recent_tab() {
			//parent.location.hash = 'recent';
			var tabsWidth = document.getElementById("pagewrapper").scrollWidth;		
			var el = document.getElementById("recentLeadDistributions_tab");
			recent_distro_grid.width = tabsWidth;
			recent_distro_grid.render('recent-grid');
		}

		function queue_tab() {
			//parent.location.hash = 'queue';
			var tabsWidth = document.getElementById("pagewrapper").scrollWidth;		
			var el = document.getElementById("manageQueueMembers_tab");
			//queueMemberGrid.width = tabsWidth;
			//queueMemberGrid.render('queue-member-grid');
		}
		
		function conflict_tab() {
			//parent.location.hash = 'conflicts';
			var tabsWidth = document.getElementById("pagewrapper").scrollWidth;		
			conflictGrid.width = tabsWidth;
			conflictGrid.render('conflict-grid');
		}
				
		function rerenderGrid() {
			try {
				grid.destroy();
			    var xg = Ext.grid;			    
				var someWidth = document.getElementById('some-grid').clientWidth;				
				var sm2 = new xg.CheckboxSelectionModel();			
				var myDataString = document.getElementById('{!$Component.form_review_room.arrayOfLeads}').value;
				var tabsWidth = document.getElementById("pagewrapper").scrollWidth;
				//alert(myDataString);
				eval(myDataString);
			} catch(e) {alert(e);}
			
			try {
				var store = new Ext.data.SimpleStore({
					fields:[
						{name:'Id'},
						{name:'FirstName'},
						{name:'LastName'},
						{name:'Company'},
						{name:'Email'},
						{name:'OwnerName'},
						{name:'CreatedDate'},
						{name:'View'}
					]
				});
				
				store.loadData(myData);
					
				grid = new xg.GridPanel({
					id:'some-grid',
		        	store: store,	        				
					cm: new xg.ColumnModel([
			            sm2,
			            {header: " ", width: 20, sortable: false, dataIndex: 'View'},
			            {header: "First Name", width: 30, sortable: true, dataIndex: 'FirstName'},
			            {header: "Last Name", width: 40, sortable: true, dataIndex: 'LastName'},
			            {id:'Id', header: "Company", width: 50, sortable: true, dataIndex: 'Company'},
			            {header: "Email", width: 50, sortable: true, dataIndex: 'Email'},
			            {header: "Owner", width: 35, sortable: true, dataIndex: 'OwnerName'},
			            {header: "Created Date", width: 50, sortable: true, dataIndex: 'CreatedDate', type: 'date'}
			        ]),	        	
		        	sm: sm2,
		        	viewConfig: {
		            	forceFit:true
		        	},	        	
					stripeRows:true, 
					height: 450, 
					width:tabsWidth,
					frame: false,
					selMode: sm2
				});				
				
				grid.render('some-grid');
			} catch(e) {alert(e);}
		}
		
		function render_review_room_grid() {
			
			////////////////////////////////////////////////////////////////////////////////////////
		    // Lead Review Room Grid
		    ///////////////////////////////////////////////////////////////////////////////////////

			var reader = new Ext.data.ArrayReader({}, [
			       {name: 'company'},
			       {name: 'firstname'},
			       {name: 'lastname'},
			       {name: 'email'},
			       {name: 'id'}
			    ]);
			
			var someWidth = document.getElementById('some-grid').clientWidth;				
			var sm2 = new xg.CheckboxSelectionModel();

			var myDataString = 'var myData = [ ';
			
			<apex:repeat value="{!reviewRoomLeads}" var="l" id="LeadRepeat">
				//myDataString += "['{!l.Id}','{!l.FirstName}','{!l.LastName}','{!l.Company}','{!l.Email}','{!l.Owner.Name}','{!l.CreatedDate}','<a href=\"/{!l.Id}\">View</a>'],";
				
				var lastname = "{!l.LastName}";
				lastname = lastname.split("'").join("\'");
				var firstname = "{!l.FirstName}";
				firstname = firstname.split("'").join("\'");
				var company = "{!l.Company}";
				company = company.split("'").join("\'");
				var owner = "{!l.Owner.Name}";
				owner = owner.split("'").join("\'");
				myDataString += "['{!l.Id}','"+firstname+"','"+lastname+"','"+company+"','{!l.Email}','"+owner+"','{!l.CreatedDate}','<a href=\"/{!l.Id}\">View</a>'],";
			</apex:repeat>

			myDataString += "];";
			myDataString = myDataString.replace(',];', '];');

			
			var myDataString2 = document.getElementById('{!$Component.form_review_room.arrayOfLeads}').value;
			eval(myDataString2);
			
			if (!grid) {
				var store = new Ext.data.SimpleStore({
					fields:[
						{name:'Id'},
						{name:'FirstName'},
						{name:'LastName'},
						{name:'Company'},
						{name:'Email'},
						{name:'OwnerName'},
						{name:'CreatedDate'},
						{name:'View'}
					]
				});
				
				store.loadData(myData);
				
				grid = new xg.GridPanel({
					id:'some-grid',
		        	store: store,	        				
					cm: new xg.ColumnModel([
			            sm2,
			            {header: " ", width: 20, sortable: false, dataIndex: 'View'},
			            {header: "First Name", width: 30, sortable: true, dataIndex: 'FirstName'},
			            {header: "Last Name", width: 40, sortable: true, dataIndex: 'LastName'},
			            {id:'Id', header: "Company", width: 50, sortable: true, dataIndex: 'Company'},
			            {header: "Email", width: 50, sortable: true, dataIndex: 'Email'},
			            {header: "Owner", width: 35, sortable: true, dataIndex: 'OwnerName'},
			            //{header: "Created Date", width: 50, sortable: true, dataIndex: 'CreatedDate', type: 'date', renderer: Ext.util.Format.dateRenderer('d/m/Y H:i')}
			        	{header: "Created Date", width: 50, sortable: true, dataIndex: 'CreatedDate', type: 'date'}
			        ]),	        	
		        	sm: sm2,
		        	viewConfig: {
		            	forceFit:true
		        	},	        	
					stripeRows:true, 
					height: 450, 
					width:tabsWidth,
					frame: false,
					selMode: sm2,
					loadMask: true
				});	
							
				grid.render('some-grid');
			}
		}
			
		function render_recent_distributions_grid() {
			
			////////////////////////////////////////////////////////////////////////////////////////
		    // Recent Distributions Grid
		    ///////////////////////////////////////////////////////////////////////////////////////
			try {
				var distroDateString = 'var myData2 = [ ';
				<apex:repeat value="{!recentDistros}" var="d" id="DistroRepeat">
					//distroDateString += "['{!d.Id}','{!d.Number_of_Leads__c}','{!d.Name}','{!d.Initiated_By__r.Name}','{!d.Distribution_Date_Time__c}', '<a href=\"/{!d.Id}\">View</a>'],";
					distroDateString += "['{!d.Id}','{!d.Number_of_Leads__c}','{!d.Name}','{!d.Initiated_By__r.Name}','{!d.Distribution_Date_Time__c}', '<a href=\"/{!d.Id}\">View</a>'],";
				</apex:repeat> 
				
				//distroDateString += "['','','','','']];";
				distroDateString += "];";
				distroDateString = distroDateString.replace(',];', '];');
				eval(distroDateString);
	
				if (!recent_distro_grid) {
					
					var recentDistro_store = new Ext.data.SimpleStore({
						fields:[
							{name:'Id'},
							{name:'NumLeads', type: 'int'},
							{name:'Name'},
							{name:'InitiatedBy'},
							{name:'DistroDateTime', type: 'date'},
							{name:'View'}
						]
					});
					
					
					recentDistro_store.loadData(myData2);
	
	
					recent_distro_grid = new xg.GridPanel({
						id:'recent-grid',
			        	store: recentDistro_store,	        				
						cm: new xg.ColumnModel([
				            {header: " ", width: 25, sortable: false, dataIndex: 'View'},
				            {id:'Id', header: "Name", width: 150, sortable: true, dataIndex: 'Name'},
				            {header: "Number of Leads", width: 100, sortable: true, dataIndex: 'NumLeads'},
				            {header: "Initiated By", width: 150, sortable: true, dataIndex: 'InitiatedBy'},
				            {header: "Distribution Date", width: 200, sortable: true, dataIndex: 'DistroDateTime'}
				        ]),	        	
			        	viewConfig: {
			            	forceFit:true
			        	},	        	
						stripeRows:true,
						frame: false,
						loadMask: true,
						height: 450
					});	
				}
			} catch(e) {alert(e);}
		}
		
		
		function render_conflicts_grid() {
			
			////////////////////////////////////////////////////////////////////////////////////////
		    // Lead Conflicts Grid
		    ///////////////////////////////////////////////////////////////////////////////////////
		    
		    //var isRefresh = false;
		    //if (operation == 'Refresh') {
		    //	conflictGrid.destroy();
		    //	isRefresh = true;
	    	//}
	    	
			//<apex:repeat value="{!conflictLeads}" var="l" id="ConflictLeads">
				//var foo = 'foo';
			//</apex:repeat> 
			
		    var xg_2 = Ext.grid;
		    
		    //alert(document.getElementById('{!$Component.form_conflicts.arrayOfConflicts}').value);
			var conflictString = document.getElementById('{!$Component.form_conflicts.arrayOfConflicts}').value;
			
			//alert(conflictString);
			eval(conflictString);
			
			if (!conflictGrid) {
				var conflict_sm = new Ext.grid.CheckboxSelectionModel();
				var conflict_store = new Ext.data.SimpleStore({
					fields:[
						{name:'Id'},
						{name:'FirstName'},
						{name:'LastName'},
						{name:'Company'},
						{name:'Email'},
						{name:'OwnerName'},
						{name:'CreatedDate'},
						{name:'View'},
						{name:'Select'}
					]
				});
				
				try {
					conflict_store.loadData(conflictData);
				} catch(e) {}
				
				var expander = new xg_2.RowExpander({
			        tpl : new Ext.Template(
			        	'<div style="padding:10px;">',
			            '<p><b>Assign to:</b> {Select}</p>',
			            '</div>'
			        )
			    });
			    				
				conflictGrid = new xg_2.GridPanel({
					id:'the-conflict-grid',
		        	store: conflict_store,	        				
					cm: new xg_2.ColumnModel([
						//expander,
			            {header: " ", width: 20, sortable: false, dataIndex: 'View'},
			            {header: "First Name", width: 30, sortable: true, dataIndex: 'FirstName'},
			            {header: "Last Name", width: 40, sortable: true, dataIndex: 'LastName'},
			            {id:'Id', header: "Company", width: 50, sortable: true, dataIndex: 'Company'},
			            {header: "Email", width: 50, sortable: true, dataIndex: 'Email'},
			            {header: "Owner", width: 35, sortable: true, dataIndex: 'OwnerName'},
			            //{header: "Assign To", width: 70, sortable: false, dataIndex: 'Select'},
			            {header: "Created Date", width: 50, sortable: true, dataIndex: 'CreatedDate', type: 'date'}
			        ]),
		        	viewConfig: {
						forceFit:true, 
						enableRowBody:true, 
						showPreview:true,
						getRowClass : function(record, rowIndex, p, store){
					        if(this.showPreview){
					    	    p.body = '<div style="padding:10px;">';
					    	    p.body += '<p><b>Assign to:&nbsp;</b>'+record.data.Select+'</p>';
					    	    p.body += '</div>';
					        	return 'x-grid3-row-expanded';
					      	}
					      	return 'x-grid3-row-collapsed';
				      	}
		        	},
					stripeRows:true,
					frame: false,
					loadMask: true,
					height: 450,
					disableSelection: false,
					trackMouseOver: true
				});
			}
		}

		Ext.onReady(function(){
			//LOADING MASK
			setTimeout(function(){
				Ext.get('loading').remove();
			    Ext.get('loading-mask').fadeOut({remove:true});
			 }, 350);
			 
			//prevents mixed content message in ie
			Ext.BLANK_IMAGE_URL = '/s.gif';
			Ext.SSL_SECURE_URL = '/s.gif';
			 
			xg = Ext.grid
			
			try{
				var el = getElementsByClassName("bPageTitle");
				el[0].style.marginBottom = '5px';
			} catch(e) {}
		
			//Ext.QuickTips.init();
		
			var current_location = window.location.toString();
			var selectedTab = 0;
									
			tabsWidth = document.getElementById("pagewrapper").scrollWidth;
			
			var el = document.getElementById("recentLeadDistributions_tab");
			el.width = tabsWidth;
			var el2 = document.getElementById("manageQueueMembers_tab");
			el2.width = tabsWidth;
			
			tabs = new Ext.TabPanel({
			        renderTo: 'tabs1',
			        deferredRender:false,
			        activeTab: 0,
			        frame:false,
			        width:tabsWidth,
			        defaults:{autoHeight: true},
			        items:[
			            {
			            	contentEl:'reviewRoom_tab', 
			            	title: 'Lead Review Room'
		            	},{
		            		contentEl:'conflictReviewRoom_tab', 
		            		title: 'Conflict Review Room',
							listeners: {activate: conflict_tab}
			            },{
		            		contentEl:'manageQueueMembers_tab', 
		            		title: 'Manage Queue Members'
							//listeners: {activate: queue_tab}
			            },{
			            	contentEl:'recentLeadDistributions_tab', 
			            	title: 'Recent Lead Distributions',
							listeners: {activate: recent_tab}
		            	}
			        ]
			    });
			
			///RENDER GRIDS
			render_review_room_grid();
			render_recent_distributions_grid();
			render_conflicts_grid();

			
			Ext.get('btnDistribute').on('click', function(e) {
				if (grid.selModel.getSelections().length > 0) {				
			        var message = 'Are you sure you want to distribute ';
			        if (grid.selModel.getSelections().length == 1) {
			        	message += 'the 1 selected lead?';
		        	} else {
		        		message += 'the ' + grid.selModel.getSelections().length + ' selected leads?';
	        		}
			        confirm_distribute_message = Ext.MessageBox.confirm('Confirm', message, distributeLeads);
		        } else {
		        	var messageBox = Ext.MessageBox;
		        	messageBox.minWidth = 300;
		        	messageBox.alert('Error', 'Please select leads to distribute');
				}
			});
			
			Ext.get('btnConflicts').on('click', function(e) {
			        var message = 'Are you sure you want to assign these leads?';
			        confirm_conflict_assign_message = Ext.MessageBox.confirm('Confirm', message, distribute_conflict_leads);			        
			});
			
			Ext.get('btnDisqualify').on('click', function(e) {
				if (grid.selModel.getSelections().length > 0) {				
			        var message = 'Are you sure you want to disqualify these leads?';
			        confirm_disqualify_message = Ext.MessageBox.confirm('Confirm', message, disqualifyLeads);	
		        } else {
		        	var messageBox = Ext.MessageBox;
		        	messageBox.minWidth = 300;
		        	messageBox.alert('Error', 'Please select leads to disqualify');	        
		        }		        
			});
			
			var select_html = document.getElementById("{!$Component.master_form.hidden_user_array}").value;
			
			Ext.get('btnManuallyDistribute').on('click', function(e) {
				if (grid.selModel.getSelections().length > 0) {				
					var win = new Ext.Window({
						width:420,
						height:70,
						title:"Manually Distribute Leads",
						html : select_html,
						modal : true
					});
					win.show();
		        } else {
		        	var messageBox = Ext.MessageBox;
		        	messageBox.minWidth = 300;
		        	messageBox.alert('Error', 'Please select leads to manually distribute');	        
		        }		        
			});

		});
		
		
		function distributeLeads(btn) {
			if (btn == 'yes' || btn == 'Yes') {
				//LOADING HERE
				confirm_distribute_message.hide();
				Ext.MessageBox.show({
		           msg: 'Distributing leads, please wait...',
		           progressText: 'distributing...',
		           width:300,
		           wait:true,
		           waitConfig: {interval:200},
		           animEl: 'mb7'
		       });

				var rows_data=grid.selModel.getSelections();
				var theleads = new Array();
				var something = '';
				for(var i = 0; i < rows_data.length; i++) {
					var rowdata = rows_data[i].data;
					something += rowdata.Id + ';';
				}
				var myHiddenField = document.getElementById("{!$Component.master_form.hiddenReviewRoomSelectedLeadIds}");
				myHiddenField.value = something;
				var myHiddenButton = document.getElementById("{!$Component.master_form.btnDist}");
				myHiddenButton.click();
				Ext.MessageBox.hide();
				Ext.MessageBox.alert('Status', 'Leads were distributed successfully');
			}
		}
		
		function disqualifyLeads(btn) {
			if (btn == 'yes' || btn == 'Yes') {
				//LOADING HERE
				confirm_disqualify_message.hide();
				Ext.MessageBox.show({
		           msg: 'Disqualifying leads, please wait...',
		           progressText: 'disqualifying...',
		           width:300,
		           wait:true,
		           waitConfig: {interval:200},
		           animEl: 'mb7'
		       });

				var rows_data=grid.selModel.getSelections();
				var theleads = new Array();
				var something = '';
				for(var i=0; i < rows_data.length; i++) {
					var rowdata = rows_data[i].data;
					something += rowdata.Id + ';';
				}
				var myHiddenField = document.getElementById("{!$Component.master_form.hiddenReviewRoomSelectedLeadIds}");
				myHiddenField.value = something;
				var myHiddenButton = document.getElementById("{!$Component.master_form.btnDisq}");
				myHiddenButton.click();
				Ext.MessageBox.hide();
				Ext.MessageBox.alert('Status', 'Leads were disqualified successfully');
			}
		}
		
		function confirmSuccess() {
			window.location.reload();
		}
		
		function click_distribute_button() {
			document.getElementById("btnDistribute").click();
		}
		
		function click_disqualify_button() {
			document.getElementById("btnDisqualify").click();
		}
		
		function click_conflict_button() {
			document.getElementById("btnConflicts").click();
		}
		
		function click_manual_distribute_button() {
			document.getElementById("btnManuallyDistribute").click();
		}
		
		function click_manual_distribute_page_reference_button() {
			var manual_distribute_select = document.getElementById("select_manual_distribution");
			var selected_id = manual_distribute_select.value;
			var hidden_user_param = document.getElementById("{!$Component.master_form.manually_selected_user_hidden}");
			hidden_user_param.value = selected_id;

			set_selected_review_room_leads();
			
			var myHiddenButton = document.getElementById("{!$Component.master_form.btnManuallyAssignOwners}");
			myHiddenButton.click();
		}
		
		function set_selected_review_room_leads() {
			
			var rows_data=grid.selModel.getSelections();
			
			var selected_string = '';
			for(var i=0; i < rows_data.length; i++) {
				var rowdata = rows_data[i].data;
				selected_string += rowdata.Id + ';';
			}
			
			var myHiddenField = document.getElementById("{!$Component.master_form.hiddenReviewRoomSelectedLeadIds}");
			myHiddenField.value = selected_string;
		}
				
	</script>
	</head>
	<body>
		<apex:form id="master_form" >
			<apex:inputHidden id="hiddenReviewRoomSelectedLeadIds" value="{!selectedIdArrayString}" />
			<apex:inputHidden id="hidden_conflict_owner_array" value="{!conflictLeadOwnersString}" />	
			<apex:inputHidden id="hidden_user_array" value="{!user_select_string}" />
			<apex:inputHidden id="manually_selected_user_hidden" value="{!manually_distribute_ownerid}" />
			
			<apex:commandButton action="{!distributeLeads}" value="Distribute" id="btnDist" style="display: none" >
				<apex:actionSupport event="oncomplete" oncomplete="confirmSuccess()" />
			</apex:commandButton>
			<apex:commandButton action="{!disqualifyLeads}" value="Distribute" id="btnDisq" style="display: none" >
				<apex:actionSupport event="oncomplete" oncomplete="confirmSuccess()" />
			</apex:commandButton>
			<apex:commandButton action="{!distribute_conflict_leads}" value="Assign Conflict Owners" id="btnAssignConflictOwners" style="display: none" >
				<apex:actionSupport event="oncomplete" oncomplete="confirmSuccess()" />
			</apex:commandButton>
			<apex:commandButton action="{!manually_distribute_leads}" value="Manually Assign Owners" id="btnManuallyAssignOwners" style="display: none" >
				<apex:actionSupport event="oncomplete" oncomplete="confirmSuccess()" />
			</apex:commandButton>
		</apex:form> 
		
		<div id="loading-mask"></div>
		<div id="loading">
			<div class="loading-indicator">
			    Loading...
			</div>
		</div>
		<apex:actionStatus id="teststatus" >
			<apex:facet name="start"> 
				<apex:image url="{!$Resource.load}"/>
				<div id="loading-mask"></div>
				<div id="loading">
					<div class="loading-indicator">
					    Loading...
					</div>
				</div>
			</apex:facet>
		</apex:actionStatus>
		
		<div id="pagewrapper">
		<apex:sectionHeader title="Lease Distributor Configuration" subtitle="Home" id="foo"/>
		<apex:outputPanel id="statusPanel">
			<!-- ffb1b1: red, cd6f6f: red(2) -->
			<div style="height:30px;margin-bottom:5px;vertical-align:middle;padding:5px;border:1px solid #ccc;background-color:{!if(isactive = true, '#ccfe8b', '#ffb1b1')};">
				<div style="float:left;margin-right:10px;">
					<apex:image url="{!$Resource.active_icon}" width="32" height="32" rendered="{!isactive}" />
					<apex:image url="{!$Resource.inactive_icon}" width="32" height="32" rendered="{!not(isactive)}" />
				</div>
				<div style="float:left;margin-right:15px;">
					<div>
						The Lead Distributor is <b>{!if(isactive = true, 'Active', 'Inactive')}</b> 
					</div>
					<div>
						<b>
						<apex:form > 
							<apex:commandLink action="{!setLeadDistributorStatus}" rerender="statusPanel" 
								value="Turn the lead distributor {!if(isactive = true, 'off', 'on')}" >
								<apex:actionSupport event="onclick" status="toggleStatus" />
							</apex:commandLink>
						</apex:form> 
						</b>	
					</div>
				</div>
				<div style="float:left;">
					<apex:actionStatus id="toggleStatus">
						<apex:facet name="start"> 
							<apex:image url="{!$Resource.facebook_load_big}"/>
						</apex:facet>
					</apex:actionStatus>
				</div>
			</div>
		</apex:outputPanel>

		<button id="btnDistribute" style="display:none;height:1px;width:1px;">Distribute Selected Leads</button>
		<button id="btnDisqualify" style="display:none;height:1px;width:1px;">Disqualify Selected Leads</button>
		<button id="btnConflicts" style="display:none;height:1px;width:1px;">Distribute Conflict Leads</button>
		<button id="btnManuallyDistribute" style="display:none;height:1px;width:1px;">Manually Distribute Leads</button>
		
		<div style="margin-top:0px;margin-bottom:5px;height:600px;position:relative;">
			<div id="tabs1">
				<div id="reviewRoom_tab">
					<apex:form id="form_review_room">
						<div style="margin-bottom:0px;background-color:#3044B5;border:1px solid #ccc;height:32px;padding:5px;">
							<div style="width:40px;float:left;">
								<apex:image url="{!$Resource.lead_icon}" width="32" height="32"/>
							</div>
							<div style="color:#fff;">
								<span style="font-size:18px;font-weight:bold;">Lead Review Room</span> 
							</div>
						</div>
						<div style="height:20px;">
							<div style="vertical-align:middle;padding-left:5px;padding-right:2px;padding-top:2px;float:left;">
								<apex:image url="{!$Resource.distribute_icon}" width="16" height="16"/> 
							</div>
							<div style="padding-top:3px;margin-right:7px;vertical-align:middle;float:left;">
								<a href="javascript:void(0);" onclick="click_distribute_button();">Distribute Selected Leads By Round Robin</a>
							</div>
							<div style="vertical-align:middle;padding-left:5px;padding-right:2px;padding-top:2px;float:left;">
								<apex:image url="{!$Resource.manually_distribute_icon}" width="16" height="16"/> 
							</div>
							<div style="padding-top:3px;margin-right:7px;vertical-align:middle;float:left;">
								<a href="javascript:void(0);" onclick="click_manual_distribute_button();">Manually Distribute Selected Leads</a>
							</div>
							<div style="vertical-align:middle;padding-left:5px;padding-right:2px;padding-top:2px;float:left;">
								<apex:image url="{!$Resource.disqualify_icon}" width="16" height="16"/> 
							</div>
							<div style="padding-top:3px;margin-right:10px;vertical-align:middle;float:left;">
								<a href="javascript:void(0);" onclick="click_disqualify_button();">Disqualify Selected Leads</a>
							</div>
							<div style="padding-right:2px;padding-top:2px;vertical-align:middle;float:left;">
								<apex:image url="{!$Resource.refresh_icon}" width="16" height="16"/> 
							</div>
							<div style="padding-top:3px;margin-right:5px;vertical-align:middle;float:left;">
								<apex:commandLink action="{!refreshPage}" status="refreshStatus" oncomplete="rerenderGrid()" rerender="refreshthis">
								Refresh 
								</apex:commandLink>
							</div>
							<div style="padding-right:2px;padding-top:4px;vertical-align:middle;float:left;">
								<apex:actionStatus id="refreshStatus">
									<apex:facet name="start"> 
										<apex:image url="{!$Resource.facebook_load_small}"/>
									</apex:facet>
								</apex:actionStatus>
							</div>	
						</div>
						<apex:outputPanel id="refreshthis">
							<apex:inputTextArea cols="100" rows="6" style="display:none;" id="arrayOfLeads" value="{!store}" />
						</apex:outputPanel>
						<apex:outputPanel id="review_room_grid">
						<div id="some-grid" style="width:100%;">
						
						</div>
						</apex:outputPanel>
					</apex:form>
				</div>
				<div id="conflictReviewRoom_tab">
					<apex:form id="form_conflicts">
						<div style="margin-bottom:0px;background-color:#3044B5;border:1px solid #ccc;height:32px;padding:5px;">
							<div style="width:40px;float:left;">
								<apex:image url="{!$Resource.lead_icon}" width="32" height="32"/>
							</div>
							<div style="color:#fff;">
								<span style="font-size:18px;font-weight:bold;">Conflict Review Room</span> 
							</div>
						</div>
						<div style="height:20px;">
							<div style="vertical-align:middle;padding-left:5px;padding-right:2px;padding-top:2px;float:left;">
								<apex:image url="{!$Resource.distribute_icon}" width="16" height="16"/> 
							</div>
							<div style="padding-top:3px;margin-right:7px;vertical-align:middle;float:left;">
								<a href="javascript:void(0);" onclick="click_conflict_button();">Distribute Leads With Selected Owners</a>
							</div>
							<!--  
							<div style="padding-right:2px;padding-top:2px;vertical-align:middle;float:left;">
								<apex:image url="{!$Resource.refresh_icon}" width="16" height="16"/> 
							</div>
							<div style="padding-top:3px;margin-right:5px;vertical-align:middle;float:left;">
								<apex:commandLink action="{!refreshPage}" status="refreshStatus_conflict" oncomplete="render_conflicts_grid()" rerender="refreshthis_conflict">
								Refresh 
								</apex:commandLink>
							</div>
							<div style="padding-right:2px;padding-top:4px;vertical-align:middle;float:left;">
								<apex:actionStatus id="refreshStatus_conflict">
									<apex:facet name="start"> 
										<apex:image url="{!$Resource.facebook_load_small}"/>
									</apex:facet>
								</apex:actionStatus>
							</div>	
							-->
						</div>
						<apex:outputPanel id="refreshthis_conflict">
							<apex:inputTextArea cols="100" rows="6" style="display:none;" id="arrayOfConflicts" value="{!conflictStore}" />
						</apex:outputPanel>
						<apex:outputPanel id="conflict_room_grid">
							<div id="conflict-grid" style="width:100%;">
							
							</div>
						</apex:outputPanel>
					</apex:form>
				</div>
				<div id="manageQueueMembers_tab">
					<apex:form >
					<div style="margin-bottom:20px;">

						<div style="margin-bottom:0px;background-color:#3044B5;border:1px solid #ccc;height:32px;padding:5px;">
							<div style="width:40px;float:left;">
								<apex:image url="{!$Resource.user_icon32}" width="32" height="32"/>
							</div>
							<div style="color:#fff;">
								<span style="font-size:18px;font-weight:bold;">Manage Queue Members</span> 
							</div>
						</div>
						<div style="height:20px;">
							<div style="vertical-align:middle;padding-left:10px;padding-right:2px;padding-top:2px;float:left;">
								<apex:image url="{!$Resource.plus_icon}" width="16" height="16"/> 
							</div>
							<div style="padding-left:8px;padding-top:3px;vertical-align:middle;">
								<!--  <apex:outputLink style="font-size:12px;" 
								value="/a0K/e?retURL=%2fapex%2fLeadDistributor_Configuration%3fsfdc.tabName%3d01r400000001iXD&saveURL=%2fapex%2fLeadDistributor_Configuration%3fsfdc.tabName%3d01r400000001iXD" 
								id="theLink"> -->
								<apex:outputLink value="{!URLFOR($Action.LeadQueueMember__c.New, null, [retURL=$Page.LeadDistributor_Configuration, saveURL=$Page.LeadDistributor_Configuration])}">
								Add a lead queue member
								</apex:outputLink>
							</div>	
						</div>
						<div style="border-top:1px solid #ccc;padding:0px;">
							<div>			
						        <apex:dataTable styleClass="x-grid3 table" rowClasses="tablerows" 
						        	headerClass="testHeader" value="{!queueMembers}" cellpadding="1" cellspacing="0" 
						        	style="font-size:12px;width:100%;background-color:#fff;" var="qm" id="foo" rendered="{!NOT(ISNULL(queueMembers))}">
						            <apex:column headervalue="" width="50px;" >
										<div style="padding-left:10px;">
											<apex:outputLink value="/a0L/e?CF00N40000001s01j={!qm.member.User__r.Name}&CF00N40000001s01j_lkid={!qm.member.Id}&retURL=%2fapex%2fLeadDistributor_Configuration%3fsfdc.tabName%3d01r400000001iXD&saveURL=%2fapex%2fLeadDistributor_Configuration%3fsfdc.tabName%3d01r400000001iXD">
												<apex:image url="{!$Resource.calendar_icon}" /> 
											</apex:outputLink>
										</div>
						            </apex:column>
						            <apex:column headervalue="User">
						            	<apex:outputLink value="/{!qm.member.Id}">{!qm.member.User__r.Name}</apex:outputLink>
						            </apex:column>
						            <apex:column headerValue="Active?" >
						            	<div style="vertical-align:middle;">
											<apex:image url="{!$Resource.active_icon}" width="16" height="16" rendered="{!qm.IsActive}" />
											<apex:image url="{!$Resource.inactive_icon}" width="16" height="16" rendered="{!not(qm.IsActive)}" />
											<apex:outputLink style="font-size:12px;" value="/{!qm.ActiveVacationId}" title="[why?]" id="vacationLink" rendered="{!not(qm.IsActive)}">
											why?
											</apex:outputLink>
										</div>
						            </apex:column> 
						            <apex:column headerValue="Round Robin Member?" >
										<apex:image url="{!$Resource.active_icon}" width="16" height="16" rendered="{!qm.member.Round_Robin_Member__c}" />
										<apex:image url="{!$Resource.inactive_icon}" width="16" height="16" rendered="{!not(qm.member.Round_Robin_Member__c)}" />
						            </apex:column>  
						            <apex:column headerValue="Last Round Robin Assignment" value="{!qm.LastRoundRobin}" /> 
						        </apex:dataTable> 					        
						    </div>
					</div>	
					</apex:form>
				</div>
				</div>
				<div id="recentLeadDistributions_tab" style="width:100%;">
					<div style="margin-bottom:0px;background-color:#3044B5;border:1px solid #ccc;height:32px;padding:5px;">
						<div style="width:40px;float:left;">
							<apex:image url="{!$Resource.lead_dist_icon}" width="32" height="32"/>
						</div>
						<div style="color:#fff;">
							<span style="font-size:18px;font-weight:bold;">Recent Lead Distributions</span> 
						</div>
					</div>
					<div id="recent-grid" style="width:100%;">
						
					</div>
				</div>
			</div>
		</div>
	</div>
	</body>
</apex:page>